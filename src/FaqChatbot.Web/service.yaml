openapi: 3.0.0
info:
  version: "1.7"
  title: ""

x-zd-default-http-caller-options:
  retry-count: 5
  timeout-seconds: 5
  exceptions-before-circuit-pop: 5
  circuit-open-time-seconds: 60
  connection-keep-alive-seconds: 240

servers:
  - url: 'http://localhost:5000'
    x-zd-env: Local
  - url: 'https://faq-chatbot-v1.east.zocdoccloud.{domain}'
    x-zd-var-to-env:
      net: Staging
      com: Production
    variables:
      domain:
        default: com
        enum:
          - net
          - com

paths:
  /faq-chatbot/v1/an-example-endpoint:
    get:
      tags:
        - examples
      operationId: exampleEndpoint
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleResponse'


  /api/restaurants:
    get:
      parameters:
        - name: page_token
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
      tags:
        - restaurant
      operationId: getRestaurants
      responses:
        "200":
          description: paginated list of restaurants
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ListRestaurantsResponse'
    post:
      tags:
        - restaurant
      operationId: postRestaurant
      requestBody:
        description: a restaurant object to create
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateRestaurantRequest'
      responses:
        "201":
          description: show created restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'

  /api/restaurant/{restaurant_id}:
    get:
      tags:
        - restaurant
      operationId: getRestaurantById
      parameters:
        - in: path
          name: restaurant_id
          schema:
            type: string
          required: true
          description: id of the restaurant to get
      responses:
        "200":
          description: show retrieved restaurant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        "404":
          description: not found

  /api/restaurant/{restaurant_id}/reservations:
    post:
      tags:
        - reservation
      operationId: postReservation
      parameters:
        - in: path
          name: restaurant_id
          schema:
            type: string
          required: true
          description: id of the restaurant to post a reservation to
      requestBody:
        description: a reservation object to create
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        "201":
          description: show created reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
    get:
      tags:
        - reservation
      operationId: getReservationsByRestaurantId
      parameters:
        - in: path
          name: restaurant_id
          schema:
            type: string
          required: true
          description: id of the reservation to get
      responses:
        "200":
          description: show retrieved reservations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationsResponse'
        "404":
          description: not found

  /api/reservation/{reservation_id}:
    get:
      tags:
        - reservation
      operationId: getReservationById
      parameters:
        - in: path
          name: reservation_id
          schema:
            type: string
          required: true
          description: id of the reservation
      responses:
        "200":
          description: show retrieved reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
        "404":
          description: not found

components:
  schemas:
    ExampleResponse:
      required:
        - stuff
      type: object
      properties:
        stuff:
          type: string
        maybe_stuff:
          type: boolean


    ReservationRequest:
      required:
        - start_time
        - end_time
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        dining_type:
          $ref: '#/components/schemas/DiningType'

    DiningType:
      type: string
      enum:
        - indoor_dining
        - outdoor_dining

    ReservationResponse:
      type: object
      required:
        - reservation
      properties:
        reservation:
          $ref: '#/components/schemas/Reservation'

    Reservation:
      required:
        - restaurant_id
        - reservation_id
        - start_time
        - end_time
      type: object
      properties:
        restaurant_id:
          type: string
        reservation_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        dining_type:
          $ref: '#/components/schemas/DiningType'

    CreateRestaurantRequest:
      required:
        - name
        - is_active
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        state:
          type: string
        is_active:
          type: boolean

    ListRestaurantsResponse:
      required:
        - restaurants
      type: object
      properties:
        page_token:
          type: string
        limit:
          type: integer
        restaurants:
          type: array
          items:
            $ref: "#/components/schemas/Restaurant"

    Restaurant:
      required:
        - restaurant_id
        - name
        - is_active
      type: object
      properties:
        restaurant_id:
          type: string
        name:
          type: string
        city:
          type: string
        state:
          type: string
        is_active:
          type: boolean

    ReservationsResponse:
      required:
        - reservations
      type: object
      properties:
        reservations:
          type: array
          items:
            $ref: "#/components/schemas/Reservation"
